<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Aurora</title>
    <link>https://vite.work/post/</link>
    <description>Recent content in Posts on Aurora</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>苏ICP备18050258号</copyright>
    <lastBuildDate>Tue, 06 Oct 2020 19:57:05 +0800</lastBuildDate>
    
	<atom:link href="https://vite.work/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Yarn Npm Error</title>
      <link>https://vite.work/post/yarn-npm-error/</link>
      <pubDate>Tue, 06 Oct 2020 19:57:05 +0800</pubDate>
      
      <guid>https://vite.work/post/yarn-npm-error/</guid>
      <description>npm or yarn 包校验失败 npm 和 yarn 缓存清理 npm cache clean —force yarn cache clean </description>
    </item>
    
    <item>
      <title>Python_oracle</title>
      <link>https://vite.work/post/python_oracle/</link>
      <pubDate>Wed, 10 Jun 2020 16:34:21 +0800</pubDate>
      
      <guid>https://vite.work/post/python_oracle/</guid>
      <description>环境问题 将连接oracle的python代码打包成exe文件给同事用时报错：Error: DPI-1047: Cannot locate a 64-bit Oracle Client library: &amp;ldquo;The specified module could not be found&amp;rdquo;. See https://oracle.github.io/odpi/doc/installation.html#windows for help
 windows解决办法一：  1、安装oracle 64位客户端 2、配置环境path，将客户端的目录，比如d:\oracle\product\11.2.0\client_1\bin 配置到path中 3、前面两步做完，执行报了另一个错 ora-01804 ，将 ORACLE_HOME目录设置为 d:\oracle\product\11.2.0\client_1 后，问题解决。
 windows解决办法二：  1、下载轻量级的Oracle客户端： 比如 instantclient-basic-windows.x64-11.2.0.4.0.zip 2、配置环境变量path： 将客户端的目录，比如 D:\oracle\instantclient_11_2 添加到 path 3、配置环境变量ORACL_HOME： 将客户端的上一级目录 ，比如 D:\oracle 设置为ORACLE_HOME的值 4、上面3步做完，执行报错：nls_lan python Error: &#39;ascii&#39; codec can&#39;t encode characters in position 28-31: ordinal not in range(128), 然后添加环境变量NLS_LANG，设置为：AMERICAN_AMERICA.ZHS16GBK，其值是数据库nls_database_parameters中NLS_LANGUAGE，NLS_TERRITORY，NLS_CHARACTERSET分别对应的值； 设置完成后执行成功。
 linux解决办法1：  1、下载轻量级的oracle客户端并解压安装 2、配置环境变量LD_LIBRARY_PATH=[oracle客户端安装目录]:$LD_LIBRARY_PATH ，NLS_LANG=[oracle数据库NLS_LANGUAGE_NLS_TERRITORY.</description>
    </item>
    
    <item>
      <title>Vue3_reactive</title>
      <link>https://vite.work/post/vue3_reactive/</link>
      <pubDate>Mon, 08 Jun 2020 14:39:00 +0800</pubDate>
      
      <guid>https://vite.work/post/vue3_reactive/</guid>
      <description>vue3.0 Beta发布，顺便来看看Vue3 的响应式和以前有什么区别 正文 大家都知道，Vue2 里的响应式其实有点像是一个半完全体，对于对象上新增的属性无能为力，对于数组则需要拦截它的原型方法来实现响应式。
举个例子：
let vm = new Vue({ data() { a: 1 } }) // ❌ oops，没反应！ vm.b = 2 let vm = new Vue({ data() { a: 1 }, watch: { b() { console.log(&#39;change !!&#39;) } } }) // ❌ oops，没反应！ vm.b = 2 这种时候，Vue 提供了一个 api：this.$set，来使得新增的属性也拥有响应式的效果。
但是对于很多新手来说，很多时候需要小心翼翼的去判断到底什么情况下需要用 $set，什么时候可以直接触发响应式。
总之，在 Vue3 中，这些都将成为过去。本篇文章会带你仔细讲解，proxy 到底会给 Vue3 带来怎么样的便利。并且会从源码级别，告诉你这些都是如何实现的。
响应式仓库 Vue3 不同于 Vue2 也体现在源码结构上，Vue3 把耦合性比较低的包分散在 packages 目录下单独发布成 npm 包。这也是目前很流行的一种大型项目管理方式 Monorepo。</description>
    </item>
    
    <item>
      <title>Kubernetes_problem</title>
      <link>https://vite.work/post/kubernetes_problem/</link>
      <pubDate>Fri, 05 Jun 2020 22:35:45 +0800</pubDate>
      
      <guid>https://vite.work/post/kubernetes_problem/</guid>
      <description>K8S故障排除方法 1.查看pods哪些是有问题的，Runningg正常，其他异常； /opt/kubernetes/bin/kubectl get pods --all-namespaces -owide NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE default nginx-dbddb74b8-d78cd 1/1 Running 0 17m 172.17.90.3 192.168.18.148 &amp;lt;none&amp;gt; 2.查看异常pod的详情 /opt/kubernetes/bin/kubectl describe pods nginx-dbddb74b8-2hthr 我这边异常信息如下：
Warning FailedScheduling 32m (x2 over 32m) default-scheduler 0/2 nodes are available: 2 node(s) had taints that the pod didn&#39;t tolerate.
解决办法：参考：https://github.com/kubernetes-sigs/kubespray/issues/2798
3.查看异常服务的详情 /opt/kubernetes/bin/kubectl describe services nginx 4.查看集群node的状态 /opt/kubernetes/bin/kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME 192.</description>
    </item>
    
    <item>
      <title>Docker Desktop Kubernetes</title>
      <link>https://vite.work/post/docker-desktop-kubernetes/</link>
      <pubDate>Fri, 05 Jun 2020 15:31:54 +0800</pubDate>
      
      <guid>https://vite.work/post/docker-desktop-kubernetes/</guid>
      <description>windows10 docker-desktop安装kuberetes:v1.15.5  对应版本    首先创建一个镜像对应表文件 images.properties：
k8s.gcr.io/pause:3.1=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1 k8s.gcr.io/kube-controller-manager:v1.15.5=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.15.5 k8s.gcr.io/kube-scheduler:v1.15.5=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.15.5 k8s.gcr.io/kube-proxy:v1.15.5=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.15.5 k8s.gcr.io/kube-apiserver:v1.15.5=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.15.5 k8s.gcr.io/etcd:3.3.10=registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.3.10 k8s.gcr.io/coredns:1.3.1=registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.3.1 k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:v1.10.1   然后在相同目录下，创建脚本 docker-images-k8s.ps1：
  foreach($line in Get-Content .\images.properties) { $data = $line.Split(&#39;=&#39;) $key = $data[0]; $value = $data[1]; Write-Output &amp;quot;$key=$value&amp;quot; docker pull ${value} docker tag ${value} ${key} docker rmi ${value} }   执行上面的脚本
  启用kubeernetes功能
   启用dashboard  $ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml 部署成功后，启动 Kubernetes API Server 访问代理。</description>
    </item>
    
    <item>
      <title>Websocket</title>
      <link>https://vite.work/post/websocket/</link>
      <pubDate>Fri, 05 Jun 2020 14:54:09 +0800</pubDate>
      
      <guid>https://vite.work/post/websocket/</guid>
      <description>简介 WebSocket 协议在2008年诞生，2011年成为国际标准。所有浏览器都已经支持了。
它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于服务器推送技术的一种。WebSocket 允许服务器端与客户端进行全双工（full-duplex）的通信。举例来说，HTTP 协议有点像发电子邮件，发出后必须等待对方回信；WebSocket 则是像打电话，服务器端和客户端可以同时向对方发送数据，它们之间存着一条持续打开的数据通道。
其他特点包括：
（1）建立在 TCP 协议之上，服务器端的实现比较容易。
（2）与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。
（3）数据格式比较轻量，性能开销小，通信高效。
（4）可以发送文本，也可以发送二进制数据。
（5）没有同源限制，客户端可以与任意服务器通信，完全可以取代 Ajax。
（6）协议标识符是ws（如果加密，则为wss，对应 HTTPS 协议），服务器网址就是 URL。
ws://example.com:80/some/path WebSocket 握手 浏览器发出的 WebSocket 握手请求类似于下面的样子：
GET / HTTP/1.1 Connection: Upgrade Upgrade: websocket Host: example.com Origin: null Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ== Sec-WebSocket-Version: 13 上面的头信息之中，有一个 HTTP 头是Upgrade。HTTP1.1 协议规定，Upgrade字段表示将通信协议从HTTP/1.1转向该字段指定的协议。Connection字段表示浏览器通知服务器，如果可以的话，就升级到 WebSocket 协议。Origin字段用于提供请求发出的域名，供服务器验证是否许可的范围内（服务器也可以不验证）。Sec-WebSocket-Key则是用于握手协议的密钥，是 Base64 编码的16字节随机字符串。
服务器的 WebSocket 回应如下。
HTTP/1.1 101 Switching Protocols Connection: Upgrade Upgrade: websocket Sec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s= Sec-WebSocket-Origin: null Sec-WebSocket-Location: ws://example.</description>
    </item>
    
    <item>
      <title>This is a hidden post.</title>
      <link>https://vite.work/post/hidden-post/</link>
      <pubDate>Thu, 08 Mar 2018 17:40:19 +0800</pubDate>
      
      <guid>https://vite.work/post/hidden-post/</guid>
      <description>&lt;p&gt;This post is hidden from the home page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[English] Creating a New Theme</title>
      <link>https://vite.work/post/english-preview/</link>
      <pubDate>Thu, 31 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://vite.work/post/english-preview/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>[日本語] 敬語体系</title>
      <link>https://vite.work/post/japanese-preview/</link>
      <pubDate>Wed, 30 Aug 2017 01:53:34 +0800</pubDate>
      
      <guid>https://vite.work/post/japanese-preview/</guid>
      <description>日本語の敬語体系は、一般に、大きく尊敬語・謙譲語・丁寧語に分類される。文化審議会国語分科会は、2007年2月に「敬語の指針」を答申し、これに丁重語および美化語を含めた5分類を示している。
 尊敬語 尊敬語は、動作の主体を高めることで、主体への敬意を表す言い方である。動詞に「お（ご）～になる」を付けた形、また、助動詞「（ら）れる」を付けた形などが用いられる。たとえば、動詞「取る」の尊敬形として、「（先生が）お取りになる」「（先生が）取られる」などが用いられる。
語によっては、特定の尊敬語が対応するものもある。たとえば、「言う」の尊敬語は「おっしゃる」、「食べる」の尊敬語は「召し上がる」、「行く・来る・いる」の尊敬語は「いらっしゃる」である。
謙譲語 謙譲語は、古代から基本的に動作の客体への敬意を表す言い方であり、現代では「動作の主体を低める」と解釈するほうがよい場合がある。動詞に「お～する」「お～いたします」（謙譲語＋丁寧語）をつけた形などが用いられる。たとえば、「取る」の謙譲形として、「お取りする」などが用いられる。
語によっては、特定の謙譲語が対応するものもある。たとえば、「言う」の謙譲語は「申し上げる」、「食べる」の謙譲語は「いただく」、「（相手の所に）行く」の謙譲語は「伺う」「参上する」「まいる」である。
なお、「夜も更けてまいりました」の「まいり」など、謙譲表現のようでありながら、誰かを低めているわけではない表現がある。これは、「夜も更けてきた」という話題を丁重に表現することによって、聞き手への敬意を表すものである。宮地裕は、この表現に使われる語を、特に「丁重語」と称している[104][105]。丁重語にはほかに「いたし（マス）」「申し（マス）」「存じ（マス）」「小生」「小社」「弊社」などがある。文化審議会の「敬語の指針」でも、「明日から海外へまいります」の「まいり」のように、相手とは関りのない自分側の動作を表現する言い方を丁重語としている。
丁寧語 丁寧語は、文末を丁寧にすることで、聞き手への敬意を表すものである。動詞・形容詞の終止形で終わる常体に対して、名詞・形容動詞語幹などに「です」を付けた形（「学生です」「きれいです」）や、動詞に「ます」をつけた形（「行きます」「分かりました」）等の丁寧語を用いた文体を敬体という。
一般に、目上の人には丁寧語を用い、同等・目下の人には丁寧語を用いないといわれる。しかし、実際の言語生活に照らして考えれば、これは事実ではない。母が子を叱るとき、「お母さんはもう知りませんよ」と丁寧語を用いる場合ももある。丁寧語が用いられる多くの場合は、敬意や謝意の表現とされるが、、稀に一歩引いた心理的な距離をとろうとする場合もある。
「お弁当」「ご飯」などの「お」「ご」も、広い意味では丁寧語に含まれるが、宮地裕は特に「美化語」と称して区別する[104][105]。相手への丁寧の意を示すというよりは、話し手が自分の言葉遣いに配慮した表現である。したがって、「お弁当食べようよ。」のように、丁寧体でない文でも美化語を用いることがある。文化審議会の「敬語の指針」でも「美化語」を設けている。</description>
    </item>
    
    <item>
      <title>[中文] 《长恨歌》</title>
      <link>https://vite.work/post/chinese-preview/</link>
      <pubDate>Wed, 30 Aug 2017 01:37:56 +0800</pubDate>
      
      <guid>https://vite.work/post/chinese-preview/</guid>
      <description>《长恨歌》是中国唐朝诗人白居易的一首长篇叙事诗。
 第一段：贵妃受宠爱 汉皇重色思倾国，御宇多年求不得。杨家有女初长成，养在深闺人未识。
天生丽质难自弃，一朝选在君王侧。回眸一笑百媚生，六宫粉黛无颜色。
春寒赐浴华清池，温泉水滑洗凝脂。侍儿扶起娇无力，始是新承恩泽时。
云鬓花颜金步摇，芙蓉帐暖度春宵。春宵苦短日高起，从此君王不早朝。
承欢侍宴无闲暇，春从春游夜专夜。后宫佳丽三千人，三千宠爱在一身。
金屋妆成娇侍夜，玉楼宴罢醉和春。姊妹弟兄皆列士，可怜光彩生门户。
遂令天下父母心，不重生男重生女。骊宫高处入青云，仙乐风飘处处闻。
缓歌慢舞凝丝竹，尽日君王看不足。渔阳鼙鼓动地来，惊破霓裳羽衣曲。
第二段：马嵬惊变 九重城阙烟尘生，千乘万骑西南行。翠华摇摇行复止，西出都门百余里。
六军不发无奈何，宛转蛾眉马前死。花钿委地无人收，翠翘金雀玉搔头。
君王掩面救不得，回看血泪相和流。黄埃散漫风萧索，云栈萦纡登剑阁。
峨嵋山下少人行，旌旗无光日色薄。蜀江水碧蜀山青，圣主朝朝暮暮情。
行宫见月伤心色，夜雨闻铃肠断声。
第三段：玄宗皇帝思念 天旋地转回龙驭，到此踌躇不能去。马嵬坡下泥土中，不见玉颜空死处。
君臣相顾尽霑衣，东望都门信马归。归来池苑皆依旧，太液芙蓉未央柳。
芙蓉如面柳如眉，对此如何不泪垂。春风桃李花开日，秋雨梧桐叶落时。
西宫南内多秋草，落叶满阶红不扫。梨园弟子白发新，椒房阿监青娥老。
夕殿萤飞思悄然，孤灯挑尽未成眠。迟迟钟鼓初长夜，耿耿星河欲曙天。
鸳鸯瓦冷霜华重，翡翠衾寒谁与共。悠悠生死别经年，魂魄不曾来入梦。
第四段：仙界寻妃 临邛道士鸿都客，能以精诚致魂魄。为感君王辗转思，遂教方士殷勤觅。
排空驭气奔如电，升天入地求之遍。上穷碧落下黄泉，两处茫茫皆不见。
忽闻海上有仙山，山在虚无缥缈间。楼阁玲珑五云起，其中绰约多仙子。
中有一人字太真，雪肤花貌参差是。金阙西厢叩玉扃，转教小玉报双成。
闻道汉家天子使，九华帐里梦魂惊。揽衣推枕起徘徊，珠箔银屏迤逦开。
云髻(鬓?)半偏新睡觉，花冠不整下堂来。风吹仙袂飘飘(飖)举，犹似霓裳羽衣舞。
玉容寂寞泪阑干，梨花一枝春带雨。含情凝睇谢君王，一别音容两渺茫。
昭阳殿里恩爱绝，蓬莱宫中日月长。回头下望人寰处，不见长安见尘雾。
唯将旧物表深情，钿合金钗寄将去。钗留一股合一扇，钗擘黄金合分钿。
但教心似金钿坚，天上人间会相见。临别殷勤重寄词，词中有誓两心知。
七月七日长生殿，夜半无人私语时。在天愿作比翼鸟，在地愿为连理枝。
天长地久有时尽，此恨绵绵无绝期。</description>
    </item>
    
    <item>
      <title>JS Flowchart Diagrams</title>
      <link>https://vite.work/post/js-flowchart-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:50 +0800</pubDate>
      
      <guid>https://vite.work/post/js-flowchart-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-flow&#34; data-lang=&#34;flow&#34;&gt;st=&amp;gt;start: Start|past:&amp;gt;http://www.google.com[blank]
e=&amp;gt;end: End:&amp;gt;http://www.google.com
op1=&amp;gt;operation: My Operation|past
op2=&amp;gt;operation: Stuff|current
sub1=&amp;gt;subroutine: My Subroutine|invalid
cond=&amp;gt;condition: Yes
or No?|approved:&amp;gt;http://www.google.com
c2=&amp;gt;condition: Good idea|rejected
io=&amp;gt;inputoutput: catch something...|request

st-&amp;gt;op1(right)-&amp;gt;cond
cond(yes, right)-&amp;gt;c2
cond(no)-&amp;gt;sub1(left)-&amp;gt;op1
c2(yes)-&amp;gt;io-&amp;gt;e
c2(no)-&amp;gt;op2-&amp;gt;e
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>JS Sequence Diagrams</title>
      <link>https://vite.work/post/js-sequence-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:45 +0800</pubDate>
      
      <guid>https://vite.work/post/js-sequence-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sequence&#34; data-lang=&#34;sequence&#34;&gt;Andrew-&amp;gt;China: Says Hello
Note right of China: China thinks\nabout it
China--&amp;gt;Andrew: How are you?
Andrew-&amp;gt;&amp;gt;China: I am good thanks!
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Syntax Highlighting</title>
      <link>https://vite.work/post/syntax-highlighting/</link>
      <pubDate>Tue, 30 Aug 2011 16:01:23 +0800</pubDate>
      
      <guid>https://vite.work/post/syntax-highlighting/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;helloWorld&lt;/span&gt; () {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>